name: Release a development version

on:
  push:
    branches:
      - main

jobs:
  goreleaser-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.5

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: v0.169.0
          args: release -f .goreleaser.windows2019.yml --snapshot --rm-dist

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Release a ci version of the docker images (windows)
        run: |
          docker tag marsom/serverbin:vci-windows-amd64 marsom/serverbin:${env:GITHUB_REF_SLUG}-windows-amd64
          docker tag ghcr.io/marsom/serverbin:vci-windows-amd64 ghcr.io/marsom/serverbin:${env:GITHUB_REF_SLUG}-windows-amd64
          docker push marsom/serverbin:${env:GITHUB_REF_SLUG}-windows-amd64
          docker push ghcr.io/marsom/serverbin:${env:GITHUB_REF_SLUG}-windows-amd64

  goreleaser-linux:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.5

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: v0.169.0
          args: release --snapshot --rm-dist

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Release a ci version of the docker images (linux)
        run: |
          docker tag marsom/serverbin:vci-linux-amd64 marsom/serverbin:${GITHUB_REF_SLUG}-linux-amd64
          docker tag marsom/serverbin:vci-linux-arm64 marsom/serverbin:${GITHUB_REF_SLUG}-linux-arm64
          docker tag ghcr.io/marsom/serverbin:vci-linux-amd64 ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG}-linux-amd64
          docker tag ghcr.io/marsom/serverbin:vci-linux-arm64 ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG}-linux-arm64
          docker push marsom/serverbin:${GITHUB_REF_SLUG}-linux-amd64
          docker push marsom/serverbin:${GITHUB_REF_SLUG}-linux-arm64
          docker push ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG}-linux-amd64
          docker push ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG}-linux-arm64

  docker-manifests:
    runs-on: ubuntu-latest
    needs:
      - goreleaser-linux
      - goreleaser-windows
    steps:
      - name: QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Push docker manifest (docker.io)
        run: |
          docker manifest create \
            marsom/serverbin:${GITHUB_REF_SLUG} \
            --amend marsom/serverbin:${GITHUB_REF_SLUG}-linux-amd64 \
            --amend marsom/serverbin:${GITHUB_REF_SLUG}-linux-arm64 \
            --amend marsom/serverbin:${GITHUB_REF_SLUG}-windows-amd64
          docker manifest push marsom/serverbin:${GITHUB_REF_SLUG}

      - name: Push docker manifest (ghcr.io)
        run: |
          docker manifest create \
            ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG} \
            --amend ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG}-linux-amd64 \
            --amend ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG}-linux-arm64 \
            --amend ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG}-windows-amd64
          docker manifest push ghcr.io/marsom/serverbin:${GITHUB_REF_SLUG}
